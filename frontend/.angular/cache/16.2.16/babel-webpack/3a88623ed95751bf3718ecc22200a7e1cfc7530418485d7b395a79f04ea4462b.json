{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass BeneficiaryService {\n  constructor() {\n    this.beneficiaries = [{\n      id: '1',\n      name: 'John Smith',\n      accountNumber: 'ACC2001234567',\n      bankName: 'First National Bank',\n      routingNumber: '123456789',\n      type: 'EXTERNAL',\n      category: 'PERSONAL',\n      isActive: true,\n      createdAt: new Date('2024-01-15'),\n      lastUsed: new Date('2024-01-20'),\n      email: 'john.smith@email.com',\n      phone: '+1-555-0234',\n      nickname: 'John - Rent'\n    }, {\n      id: '2',\n      name: 'Electric Company',\n      accountNumber: 'UTIL123456',\n      bankName: 'City Electric Co.',\n      type: 'EXTERNAL',\n      category: 'UTILITY',\n      isActive: true,\n      createdAt: new Date('2024-01-10'),\n      lastUsed: new Date('2024-01-30'),\n      nickname: 'Electric Bill'\n    }, {\n      id: '3',\n      name: 'Mom\\'s Account',\n      accountNumber: 'ACC1001234569',\n      bankName: 'NetBanking',\n      type: 'INTERNAL',\n      category: 'PERSONAL',\n      isActive: true,\n      createdAt: new Date('2024-01-05'),\n      lastUsed: new Date('2024-01-25'),\n      nickname: 'Mom'\n    }];\n  }\n  getBeneficiaries() {\n    return of(this.beneficiaries);\n  }\n  getBeneficiary(id) {\n    const beneficiary = this.beneficiaries.find(b => b.id === id);\n    return of(beneficiary);\n  }\n  addBeneficiary(beneficiary) {\n    const newBeneficiary = {\n      ...beneficiary,\n      id: Date.now().toString(),\n      createdAt: new Date()\n    };\n    this.beneficiaries.push(newBeneficiary);\n    return of(newBeneficiary);\n  }\n  updateBeneficiary(id, updates) {\n    const index = this.beneficiaries.findIndex(b => b.id === id);\n    if (index !== -1) {\n      this.beneficiaries[index] = {\n        ...this.beneficiaries[index],\n        ...updates\n      };\n      return of(this.beneficiaries[index]);\n    }\n    return of(null);\n  }\n  deleteBeneficiary(id) {\n    const index = this.beneficiaries.findIndex(b => b.id === id);\n    if (index !== -1) {\n      this.beneficiaries.splice(index, 1);\n      return of(true);\n    }\n    return of(false);\n  }\n  getRecentPayees(limit = 5) {\n    const recent = this.beneficiaries.filter(b => b.lastUsed).sort((a, b) => (b.lastUsed?.getTime() || 0) - (a.lastUsed?.getTime() || 0)).slice(0, limit);\n    return of(recent);\n  }\n  searchBeneficiaries(query) {\n    const filtered = this.beneficiaries.filter(b => b.name.toLowerCase().includes(query.toLowerCase()) || b.accountNumber.includes(query) || b.bankName.toLowerCase().includes(query.toLowerCase()) || b.nickname && b.nickname.toLowerCase().includes(query.toLowerCase()));\n    return of(filtered);\n  }\n  static {\n    this.ɵfac = function BeneficiaryService_Factory(t) {\n      return new (t || BeneficiaryService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BeneficiaryService,\n      factory: BeneficiaryService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { BeneficiaryService };","map":{"version":3,"names":["of","BeneficiaryService","constructor","beneficiaries","id","name","accountNumber","bankName","routingNumber","type","category","isActive","createdAt","Date","lastUsed","email","phone","nickname","getBeneficiaries","getBeneficiary","beneficiary","find","b","addBeneficiary","newBeneficiary","now","toString","push","updateBeneficiary","updates","index","findIndex","deleteBeneficiary","splice","getRecentPayees","limit","recent","filter","sort","a","getTime","slice","searchBeneficiaries","query","filtered","toLowerCase","includes","factory","ɵfac","providedIn"],"sources":["C:\\Users\\2419470\\vibeCoder\\frontend\\src\\app\\services\\beneficiary.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nexport interface Beneficiary {\r\n  id: string;\r\n  name: string;\r\n  accountNumber: string;\r\n  bankName: string;\r\n  routingNumber?: string;\r\n  type: 'INTERNAL' | 'EXTERNAL';\r\n  category: 'PERSONAL' | 'BUSINESS' | 'UTILITY';\r\n  isActive: boolean;\r\n  createdAt: Date;\r\n  lastUsed?: Date;\r\n  email?: string;\r\n  phone?: string;\r\n  nickname?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BeneficiaryService {\r\n  private beneficiaries: Beneficiary[] = [\r\n    {\r\n      id: '1',\r\n      name: 'John Smith',\r\n      accountNumber: 'ACC2001234567',\r\n      bankName: 'First National Bank',\r\n      routingNumber: '123456789',\r\n      type: 'EXTERNAL',\r\n      category: 'PERSONAL',\r\n      isActive: true,\r\n      createdAt: new Date('2024-01-15'),\r\n      lastUsed: new Date('2024-01-20'),\r\n      email: 'john.smith@email.com',\r\n      phone: '+1-555-0234',\r\n      nickname: 'John - Rent'\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Electric Company',\r\n      accountNumber: 'UTIL123456',\r\n      bankName: 'City Electric Co.',\r\n      type: 'EXTERNAL',\r\n      category: 'UTILITY',\r\n      isActive: true,\r\n      createdAt: new Date('2024-01-10'),\r\n      lastUsed: new Date('2024-01-30'),\r\n      nickname: 'Electric Bill'\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Mom\\'s Account',\r\n      accountNumber: 'ACC1001234569',\r\n      bankName: 'NetBanking',\r\n      type: 'INTERNAL',\r\n      category: 'PERSONAL',\r\n      isActive: true,\r\n      createdAt: new Date('2024-01-05'),\r\n      lastUsed: new Date('2024-01-25'),\r\n      nickname: 'Mom'\r\n    }\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  getBeneficiaries(): Observable<Beneficiary[]> {\r\n    return of(this.beneficiaries);\r\n  }\r\n\r\n  getBeneficiary(id: string): Observable<Beneficiary | undefined> {\r\n    const beneficiary = this.beneficiaries.find(b => b.id === id);\r\n    return of(beneficiary);\r\n  }\r\n\r\n  addBeneficiary(beneficiary: Omit<Beneficiary, 'id' | 'createdAt'>): Observable<Beneficiary> {\r\n    const newBeneficiary: Beneficiary = {\r\n      ...beneficiary,\r\n      id: Date.now().toString(),\r\n      createdAt: new Date()\r\n    };\r\n    this.beneficiaries.push(newBeneficiary);\r\n    return of(newBeneficiary);\r\n  }\r\n\r\n  updateBeneficiary(id: string, updates: Partial<Beneficiary>): Observable<Beneficiary | null> {\r\n    const index = this.beneficiaries.findIndex(b => b.id === id);\r\n    if (index !== -1) {\r\n      this.beneficiaries[index] = { ...this.beneficiaries[index], ...updates };\r\n      return of(this.beneficiaries[index]);\r\n    }\r\n    return of(null);\r\n  }\r\n\r\n  deleteBeneficiary(id: string): Observable<boolean> {\r\n    const index = this.beneficiaries.findIndex(b => b.id === id);\r\n    if (index !== -1) {\r\n      this.beneficiaries.splice(index, 1);\r\n      return of(true);\r\n    }\r\n    return of(false);\r\n  }\r\n\r\n  getRecentPayees(limit: number = 5): Observable<Beneficiary[]> {\r\n    const recent = this.beneficiaries\r\n      .filter(b => b.lastUsed)\r\n      .sort((a, b) => (b.lastUsed?.getTime() || 0) - (a.lastUsed?.getTime() || 0))\r\n      .slice(0, limit);\r\n    return of(recent);\r\n  }\r\n\r\n  searchBeneficiaries(query: string): Observable<Beneficiary[]> {\r\n    const filtered = this.beneficiaries.filter(b => \r\n      b.name.toLowerCase().includes(query.toLowerCase()) ||\r\n      b.accountNumber.includes(query) ||\r\n      b.bankName.toLowerCase().includes(query.toLowerCase()) ||\r\n      (b.nickname && b.nickname.toLowerCase().includes(query.toLowerCase()))\r\n    );\r\n    return of(filtered);\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}